name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux)
        if: runner.os == 'Linux' && contains(matrix.target, 'aarch64')
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
          mkdir -p "yek-${{ matrix.target }}"
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            cp "target/${{ matrix.target }}/release/yek.exe" "yek-${{ matrix.target }}/"
          else
            cp "target/${{ matrix.target }}/release/yek" "yek-${{ matrix.target }}/"
          fi
          tar -czf "yek-${{ matrix.target }}.tar.gz" "yek-${{ matrix.target }}"
        shell: bash

      - name: Compute SHA256
        id: sha
        run: |
          echo "sha256=$(shasum -a 256 yek-${{ matrix.target }}.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: yek-${{ matrix.target }}
          path: |
            yek-${{ matrix.target }}.tar.gz

      - name: Upload SHA
        uses: actions/upload-artifact@v3
        with:
          name: sha-${{ matrix.target }}
          path: |
            echo "${{ steps.sha.outputs.sha256 }}" > sha-${{ matrix.target }}.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Move artifacts to root
        run: |
          mv */yek-*.tar.gz ./

      - name: Update Formula
        run: |
          # Get version from tag
          VERSION=${GITHUB_REF#refs/tags/v}

          # Update version in Formula
          sed -i "s/^  version \".*\"/  version \"${VERSION}\"/" Formula/yek.rb

          # Update each SHA256
          for sha_file in sha-*/sha-*.txt; do
            target=$(echo $sha_file | cut -d/ -f1 | sed 's/sha-//')
            sha=$(cat $sha_file)
            sed -i "/url \".*yek-${target}.tar.gz\"/{n;s/sha256 \".*\"/sha256 \"${sha}\"/;}" Formula/yek.rb
          done

          # Configure git
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Commit and push Formula updates
          git add Formula/yek.rb
          git commit -m "chore: update formula for v${VERSION}"
          git push origin HEAD

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            yek-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
