name: Release
on:
  push:
    tags:
      - "v*"
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  should-release:
    name: Check Release Eligibility 
    runs-on: ubuntu-latest
    outputs:
      needed: ${{ steps.check-release.outputs.release_needed }}
      tag: ${{ steps.check-release.outputs.release_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check release conditions
        id: check-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${{ github.ref_name }}"
            if ! gh release view "$TAG" &>/dev/null; then
              echo "release_needed=true" >> $GITHUB_OUTPUT
              echo "release_tag=$TAG" >> $GITHUB_OUTPUT
              exit 0
            fi
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -z "$LATEST_TAG" ]; then
              echo "release_needed=true" >> $GITHUB_OUTPUT
              echo "release_tag=v0.0.1" >> $GITHUB_OUTPUT
              exit 0
            fi
            if git rev-list "$LATEST_TAG..HEAD" | grep -q .; then
              if [[ $LATEST_TAG =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
                MAJOR=${BASH_REMATCH[1]}
                MINOR=${BASH_REMATCH[2]}
                PATCH=${BASH_REMATCH[3]}
                NEXT_TAG="v${MAJOR}.${MINOR}.$((PATCH + 1))"
              else
                NEXT_TAG="${LATEST_TAG}.1"
              fi
              echo "release_needed=true" >> $GITHUB_OUTPUT
              echo "release_tag=$NEXT_TAG" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi
          echo "release_needed=false" >> $GITHUB_OUTPUT
          echo "release_tag=" >> $GITHUB_OUTPUT

  build:
    needs: should-release
    if: (github.ref == 'refs/heads/main' && needs.should-release.outputs.needed == 'true') || startsWith(github.ref, 'refs/tags/v')
    uses: ./.github/workflows/ci.yml
    with:
      version_tag: ${{ needs.should-release.outputs.tag }}
    secrets: inherit

  release:
    needs: [should-release, build]
    if: |
      (github.ref == 'refs/heads/main' && needs.should-release.outputs.needed == 'true') ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - name: Move artifacts
        run: find . -name 'yek-*.tar.gz' -exec mv {} . \;
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.should-release.outputs.tag }}
          files: yek-*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [release]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --no-verify --allow-dirty