name: Performance

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  OPENSSL_STATIC: true
  PKG_CONFIG_ALLOW_CROSS: true

jobs:
  stress:
    name: Stress
    uses: ./.github/workflows/reusable-build.yml
    with:
      run_command: |
        cargo install --path . --all-features
        cd vscode && yek
      timeout_minutes: 1
      checkout_vscode: true
      upload_artifacts: false

  benchmark:
    name: Benchmark / ${{ matrix.benchmark_group.name }}
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        benchmark_group:
          - group: SingleFile_ByteMode
            name: Single File Byte Mode
          - group: SingleFile_ByteMode_Large
            name: Single File Byte Mode Large
          - group: SingleFile_TokenMode_Large
            name: Single File Token Mode Large
          - group: MultipleFiles_Small
            name: Multiple Files Small
          - group: MultipleFiles_Medium
            name: Multiple Files Medium
          - group: MultipleFiles_Large
            name: Multiple Files Large
          - group: MultipleFiles_TokenMode
            name: Multiple Files Token Mode
          - group: CustomConfig
            name: Custom Config

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Run benchmarks
        run: |
          # Build and run on target branch
          git fetch origin ${{ github.base_ref }}
          git checkout ${{ github.base_ref }}
          cargo bench --bench serialization --no-run
          cargo bench --bench serialization -- --save-baseline ${{ github.base_ref }} '${{ matrix.benchmark_group.group }}/'

          # Build and compare on PR branch
          git checkout ${{ github.head_ref }}
          cargo bench --bench serialization --no-run
          cargo bench --bench serialization -- --baseline ${{ github.base_ref }} --noise-threshold 2 '${{ matrix.benchmark_group.group }}/' > benchmark_results.md
          echo "## Benchmark Results for ${{ matrix.benchmark_group.name }}" >> $GITHUB_STEP_SUMMARY
          cat benchmark_results.md >> $GITHUB_STEP_SUMMARY

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: criterion-${{ matrix.benchmark_group.group }}-results
          path: benchmark_results.md
          if-no-files-found: error
